{"version":3,"sources":["Component/Card.js","Component/Cardlist.js","Component/Searchbox.js","Component/Scrol.js","Container/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","Cardlist","robot","map","user","i","Searchbox","searchchange","type","placeholder","onChange","Scrol","props","style","overflowY","border","height","children","App","onsearchchange","event","setState","Searchfield","target","value","state","fetch","then","response","json","this","filterrobot","filter","item","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GACzB,OACC,sBAAKC,UAAU,oCAAf,UACA,qBAAKC,IAAI,WAAWC,IAAG,+BAA0BH,EAA1B,cACvB,gCACA,6BAAKF,IACL,4BAAIC,WCeSK,EApBC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClB,OACA,8BAEOA,EAAMC,KAAI,SAACC,EAAKC,GAChB,OACA,cAAC,EAAD,CAECR,GAAIK,EAAMG,GAAGR,GACbF,KAAMO,EAAMG,GAAGV,KACfC,MAAOM,EAAMG,GAAGT,OAHXS,SCICC,EAXG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aACnB,OACC,qBAAKT,UAAU,MAAf,SACC,uBAAOA,UAAU,iCAAiCU,KAAK,SAASC,YAAY,eAAeC,SAAUH,OCUzFI,G,MAdH,SAACC,GAEb,OACC,qBAAKC,MAAO,CAACC,UAAW,SAASC,OAAQ,mBAAmBC,OAAQ,SAApE,SACEJ,EAAMK,aC0CMC,E,kDAtCd,aAAc,IAAD,8BACZ,gBAeDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAfzC,EAAKC,MAAM,CACZvB,MAAM,GACNoB,YAAa,IAJA,E,qDASb,WAAoB,IAAD,OAClBI,MAAM,6CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAvB,GAAI,OAAE,EAAKiB,SAAS,CAACnB,MAAME,S,oBAQnC,WACE,MAA2B0B,KAAKL,MAAzBvB,EAAP,EAAOA,MAAOoB,EAAd,EAAcA,YACRS,EAAa7B,EAAM8B,QAAO,SAAAC,GAAQ,OAAOA,EAAKtC,KAAKuC,cAAcC,SAASb,EAAYY,kBAE5F,OAAShC,EAAMkC,OAGR,sBAAMtC,UAAU,KAAhB,UACL,oBAAIA,UAAU,SAAd,0BACA,cAAC,EAAD,CAAWS,aAAeuB,KAAKX,iBAC/B,cAAC,EAAD,UACC,cAAC,EAAD,CAAUjB,MAAO6B,SANpB,6C,GA1BgBM,aCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,eAAC,IAAMC,WAAP,WACA,cAAC,EAAD,IADA,OAGAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1fae2576.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name,email,id}) => {\r\n\treturn (\r\n\t\t<div className='tc bg-purple dib br3 pa3 ma2 grow'>\r\n\t\t<img alt='pictures' src={`https://robohash.org/${id}?200x200`}/>\r\n\t\t<div>\r\n\t\t<h1>{name}</h1>\r\n\t\t<p>{email}</p>\r\n\t\t</div>\r\n\t\t</div>\r\n        );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst Cardlist= ({ robot }) => {\r\n\treturn (\r\n\t<div>\r\n    {\r\n        robot.map((user,i)=>{\r\n        return (\r\n        <Card\r\n         key={i} \r\n         id={robot[i].id} \r\n         name={robot[i].name} \r\n         email={robot[i].email}\r\n         />\r\n        );\r\n     })\r\n    }\r\n    </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Cardlist;","import React from 'react';\r\n\r\n\r\nconst Searchbox = ({searchchange}) =>{\r\n\treturn(\r\n\t\t<div className='pa2'>\r\n\t\t\t<input className='pa3 ba b- -green bg-light-blue' type='search' placeholder='Search Robot' onChange={searchchange}></input>\r\n\t\t</div>\r\n\r\n\t\t);\r\n}\r\n\r\n\r\n\r\nexport default Searchbox;","import React from 'react';\r\n\r\nconst Scrol=(props)=>{\r\n\r\nreturn (\r\n\t<div style={{overflowY: 'scroll',border: '3px  solid black',height: '500px'}} >\r\n\t\t{props.children}\r\n\t</div>\r\n\r\n\t)\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default Scrol;","import React,{Component} from 'react';\r\nimport Cardlist from '../Component/Cardlist';\r\n// import  {robot}  from './robot';\r\nimport Searchbox from '../Component/Searchbox';\r\nimport './App.css';\r\nimport Scrol from '../Component/Scrol';\r\n\r\n\r\n\r\nclass App extends Component {\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state={\r\n\trobot:[],\r\n\tSearchfield: ''\r\n}\r\n\t\t\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch('http://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response=> response.json())\r\n\t\t.then(user=>this.setState({robot:user}))\r\n\t}\r\n\r\n\r\n\tonsearchchange = (event) => {\r\n\t\tthis.setState({Searchfield: event.target.value})\r\n\t\t\r\n\t}\r\nrender () {\r\n\t\tconst {robot, Searchfield}=this.state;\r\n\t\tconst filterrobot= robot.filter(item =>{return item.name.toLowerCase().includes(Searchfield.toLowerCase());\r\n\t\t})\r\n\t\treturn (!robot.length)?\r\n\t\t<h2>Loading</h2>:\r\n\t\t\t(\r\n\t\t      \t<div  className='tc'>\r\n\t\t\t\t<h1 className='rah f1'>Robo Friends</h1>\r\n\t\t\t\t<Searchbox searchchange= {this.onsearchchange} />\r\n\t\t\t\t<Scrol>\r\n\t\t\t\t <Cardlist robot={filterrobot}/>\r\n\t\t\t\t</Scrol>\r\n\t\t\t\t </div>\r\n\t\t\t\t )\r\n\t   }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import Card from './Card';\nimport App from './Container/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n// import  {robot}  from './robot';\n\nReactDOM.render(\n  <React.StrictMode>\n  <App/>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}